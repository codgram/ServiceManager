@inject HttpClient client

<EditForm Model="@product" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />


<div class="row">
    <div class="col-md-4">
        <div class="form">
                <label class="control-label">
                    Subcategory</label>
                    <InputSelect class ="form-control" @bind-Value="product.ProductSubcategoryId">
                        <option value="">Select ...</option>
                        @if(productSubcategories == null) {
                            <option>Loading product groups</option>
                        }
                        else if(productSubcategories.Length == 0) {
                            <option>you need to create category</option>
                        }
                        else {
                            @foreach(var productSubcategory in productSubcategories) {
                            <option value="@productSubcategory.ProductSubcategoryId">@productSubcategory.Name</option>
                            }
                        }
                    </InputSelect>
                
            </div>
        <div class="form-">
            <label class="control-label">Product No</label>
            <InputText class="form-control" @bind-Value="@product.ProductNo" />
            <ValidationMessage For="@(() => product.ProductNo)" />
        </div>
        <div class="form-">
            <label class="control-label">Brand</label>
            <input class="form-control" @bind="@product.Brand" />
            <ValidationMessage For="@(() => product.Brand)" />
        </div>
        <div class="form-">
            <label class="control-label">Description</label>
            <input class="form-control" @bind="@product.Description" />
            <ValidationMessage For="@(() => product.Description)" />
        </div>
        <div class="form-">
            <label class="control-label">Size</label>
            <input class="form-control" @bind="@product.Size" />
            <ValidationMessage For="@(() => product.Size)" />
        </div>
    </div>
</div>
    
    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>

</EditForm>


@code {
    [Parameter] public Product product { get; set; }
    [Parameter] public ProductSubcategory[] productSubcategories { get; set; }
    [Parameter] public Company company { get; set; }
    [Parameter] public string companySlug { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    protected override async Task OnInitializedAsync() {
        company = await client.GetFromJsonAsync<Company>($"api/company/s?slug={companySlug}");
        productSubcategories = await client.GetFromJsonAsync<ProductSubcategory[]>($"api/productsubcategory?companyId={company.CompanyId}");
    } 


}
