@page "/{companySlug}/product"
@inject HttpClient client
@using ServiceManager.Client.Shared.PIM
@layout PIMLayout
@inject IJSRuntime JsRuntime
@inject Services.Style Style

<a href="@companySlug/product/create" class="btn btn-primary mb-2">Create</a>
<br />
@if (products == null)
{
    <text>Loading...</text>
}
else if (products.Length == 0)
{
    <text>No Records Found</text>
}
else
{
    <div class="table-responsive shadow p-2 rounded bg-white">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>Product No</th>
                <th>Brand</th>
                <th>Description</th>
                <th>Size</th>
                <th>Variations</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Product product in products)
            {
                <tr>
                    <td>@product.ProductNo</td>
                    <td>@product.Brand</td>
                    <td>@product.Description</td>
                    <td>@product.Size</td>
                    <td>@GetProductVariants(product.ProductId)</td>
                    <td>
                        <div class="btn-group">
                          <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                            Action
                          </button>
                          <ul class="dropdown-menu" style="height: @height;">
                            <li><a class="dropdown-item" href="@companySlug/product/@product.ProductNo/variant">Variants</a></li> 
                            <li><a class="dropdown-item" href="@companySlug/product/@product.ProductNo/variant/create">Add Variant</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="">Edit</a></li>                                                     
                            <li><a class="dropdown-item disabled" href="#">Details</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" @onclick="@(() => DeleteProduct(product.ProductId))">Delete</a></li>
                          </ul>
                        </div>
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>
}



@code {

    [Parameter] public string companySlug { get; set; }
    private Product[] products { get; set; }
    private Company Company { get; set; }
    private Variant[] variants { get; set; }
    private string height { get; set; }

    protected override async Task OnInitializedAsync() {
        
        Company = await client.GetFromJsonAsync<Company>($"api/company/s?slug={companySlug}");

        CompanyFilter.CompanyId = Company.CompanyId;
        CompanyFilter.Slug = Company.Slug;

        products = await client.GetFromJsonAsync<Product[]>($"api/product?companyId={Company.CompanyId}");
        variants = await client.GetFromJsonAsync<Variant[]>($"api/variant?companyId={Company.CompanyId}");


        height = Style.GetHeight(products.Count());
    }

    private async Task DeleteProduct(string productId) {
        Product product = await client.GetFromJsonAsync<Product>($"api/product/{productId}");
        if(await JsRuntime.InvokeAsync<bool>("confirm", $"Do you want to delete {product.ProductNo}?")){
                await client.DeleteAsync($"api/product/{productId}");
            }
        await OnInitializedAsync();
    }

    private int GetProductVariants(string productId) {
        return variants.Where(v => v.ProductId == productId).Count();
    }

}